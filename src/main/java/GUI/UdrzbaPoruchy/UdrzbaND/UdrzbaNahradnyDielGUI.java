/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.UdrzbaPoruchy.UdrzbaND;

import GUI.UdrzbaPoruchy.PoziadavkaListener;
import GUI.UdrzbaPoruchy.UdrzbaPoruchyGUI;
import Tabulky.BNahradnyDiel;
import Tabulky.BUdrzbaPoruchyNahradnyDiel;
import Tabulky.BUdrzbaPoruchyNahradnyDielPK;

import javax.persistence.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigInteger;
import java.util.List;

/**
 * @author Mario
 */
public class UdrzbaNahradnyDielGUI extends javax.swing.JFrame implements PoziadavkaListener {

    EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("default");
    EntityManager entityManager = entityManagerFactory.createEntityManager();
    EntityTransaction transaction = entityManager.getTransaction();
    private UdrzbaPoruchyGUI udrzbaPoruchyGUI;
    private BigInteger id;
    private BigInteger oCislo;
    private String typStrojaA;

    /**
     * Creates new form UdrzbaNahradnyDielGUI
     */
    public UdrzbaNahradnyDielGUI(UdrzbaPoruchyGUI udrzbaPoruchyGUI) {
        initComponents2();
        this.udrzbaPoruchyGUI = udrzbaPoruchyGUI;

        setAlwaysOnTop(true); // Set the JFrame to always stay on top
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // vynulovanie policok
                vynulovaniePolicok();
                refreshTable();
                dispose();
            }
        });
        //this.displayDataInTable();
        udrzbaPoruchyGUI.setPoziadavkaListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCisloDielu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaPoziadavka = new javax.swing.JTextArea();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("POŽIADAVKA NA DIEL");

        jComboBoxCisloDielu.setBackground(new java.awt.Color(255, 255, 254));
        //jComboBoxCisloDielu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        jLabel2.setText("číslo dielu*:");

        jLabel3.setText("požiadavka:");

        jTextAreaPoziadavka.setColumns(20);
        jTextAreaPoziadavka.setRows(5);
        jTextAreaPoziadavka.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jScrollPane2.setViewportView(jTextAreaPoziadavka);

        jButtonInsert.setBackground(new java.awt.Color(255, 255, 254));
        jButtonInsert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonInsert.setText("INSERT");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(255, 255, 254));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(255, 255, 254));
        jButtonExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonExit.setText("EXIT");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jComboBoxCisloDielu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap())
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButtonInsert)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonUpdate)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(16, 16, 16))))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1)
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBoxCisloDielu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(191, 191, 191))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID poruchy", "os číslo opravy", "číslo ND", "požiadavka ND"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClick_ActionPerformed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>

    private void initComponents2() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCisloDielu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaPoziadavka = new javax.swing.JTextArea();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jButtonNovyDiel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("POŽIADAVKA NA DIEL");

        jComboBoxCisloDielu.setBackground(new java.awt.Color(255, 255, 254));
        //jComboBoxCisloDielu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("číslo dielu*:");

        jLabel3.setText("požiadavka:");

        jTextAreaPoziadavka.setColumns(20);
        jTextAreaPoziadavka.setRows(5);
        jTextAreaPoziadavka.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jScrollPane2.setViewportView(jTextAreaPoziadavka);

        jButtonInsert.setBackground(new java.awt.Color(255, 255, 254));
        jButtonInsert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonInsert.setText("INSERT");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(255, 255, 254));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(255, 255, 254));
        jButtonExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonExit.setText("EXIT");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jButtonNovyDiel.setBackground(new java.awt.Color(255, 255, 254));
        jButtonNovyDiel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonNovyDiel.setText("NOVÝ DIEL");
        jButtonNovyDiel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovyDielActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jComboBoxCisloDielu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jButtonInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonNovyDiel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(30, 30, 30)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jButtonExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1)
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBoxCisloDielu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonNovyDiel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(150, 150, 150))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID poruchy", "os číslo opravy", "číslo ND", "požiadavka ND"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClick_ActionPerformed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>

    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // nacitam ju znova
        this.displayDataInTable();

        // vynulovanie textovych policok
        this.vynulovaniePolicok();
    }

    private void vynulovaniePolicok() {
        jTextAreaPoziadavka.setText("");
        jComboBoxCisloDielu.setSelectedItem(" ");
    }

    private void closeApplication() {
        // cleanup code:
        this.entityManager.close();
        this.entityManagerFactory.close();
    }

    @Override
    public void onNovaPoziadavka() {
        this.id = this.udrzbaPoruchyGUI.getIdPoruchy();
        this.oCislo = this.udrzbaPoruchyGUI.getOsCisloNahlasenia();
        this.typStrojaA = this.udrzbaPoruchyGUI.getTypStrojaA();
        this.refreshTable();
        this.naplnComboBoxCisloDielu();
    }

    private void displayDataInTable() {
        try {
            transaction.begin();

            // ziskanie dat - JPQL
            TypedQuery<Object[]> query = entityManager.createQuery(
                    "SELECT DISTINCT up.idPoruchy, up.osCisloOpravy, up.cisloNd, up.pozadavkaNd " +
                            "FROM BUdrzbaPoruchyNahradnyDiel up " +
                            "JOIN BUdrzbaPoruchy u ON u.idPoruchy = up.idPoruchy AND u.osCisloOpravy = up.osCisloOpravy " +
                            "WHERE u.idPoruchy = :id AND u.osCisloOpravy = :oCislo", Object[].class);
            query.setParameter("id", id);
            query.setParameter("oCislo", oCislo);
            List<Object[]> results = query.getResultList();

            // nacitanie udajov
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (Object[] result : results) {
                Object[] row = {
                        result[0],  // idPoruchy
                        result[1],  // osCisloOpravy
                        result[2],  // cisloND
                        result[3],  // poziadavka
                };
                model.addRow(row);
            }
            transaction.commit();

        } catch (Exception e) {
            JOptionPane.getRootFrame().setAlwaysOnTop(true);
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Nastala chyba pri načítavaní údajov: " + e.getMessage() + " Skúste to znovu!");
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
        JOptionPane.getRootFrame().setAlwaysOnTop(false);
    }

    private void jTableMouseClick_ActionPerformed(MouseEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        int rowNumber = jTable1.getSelectedRow();

        BigInteger cisloDieluBigInt = (BigInteger) jTable1.getValueAt(rowNumber, 2);
        String cisloDielu = cisloDieluBigInt.toString();
        jComboBoxCisloDielu.setSelectedItem(cisloDielu);

        if (jTable1.getValueAt(rowNumber, 3) != null) {
            String poziadavka = (String) jTable1.getValueAt(rowNumber, 3);
            jTextAreaPoziadavka.setText(poziadavka);
        } else {
            jTextAreaPoziadavka.setText("");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void naplnComboBoxCisloDielu() {
        TypedQuery<BigInteger> query;
        List<BigInteger> idcka;

        query = entityManager.createQuery(
                "SELECT DISTINCT nd.cisloNd " +
                        "FROM BUdrzbaPoruchy u " +
                        "JOIN BPorucha p ON u.idPoruchy = p.idPoruchy " +
                        "JOIN BStroj str on p.idStroja = str.idStroja " +
                        "JOIN BTypStroja ts on str.typStroja = ts.typStroja  " +
                        "JOIN BNahradnyDiel nd ON ts.typStroja = nd.typStroja " +
                        "WHERE u.idPoruchy = :id AND u.osCisloOpravy = :oCislo",
                BigInteger.class);
        query.setParameter("id", id);
        query.setParameter("oCislo", oCislo);
        idcka = query.getResultList();
        try {

            transaction.begin();
            // Vytvorte model pre JComboBox
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            comboBoxModel.addElement(" ");
            for (BigInteger results : idcka) {
                comboBoxModel.addElement(results.toString());
            }
            // Nastavte model do JComboBox
            jComboBoxCisloDielu.setModel(comboBoxModel);

            // Commit
            transaction.commit();
        } catch (Exception e) {
            JOptionPane.getRootFrame().setAlwaysOnTop(true);
            e.getCause();
            JOptionPane.showMessageDialog(null, "Nastala chyba pri načítavaní ID strojov: " + e.getMessage() + " skúste to znovu!");
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
        JOptionPane.getRootFrame().setAlwaysOnTop(false);
    }

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {
        JOptionPane.getRootFrame().setAlwaysOnTop(true);

        int rowCount = jTable1.getRowCount();
        if (rowCount == 0) {
            JOptionPane.showMessageDialog(null, "Neexistuje žiadna požiadavka, nemôžete vykonať túto akciu!");
            this.vynulovaniePolicok();
            return;
        }

        int rowNumber = jTable1.getSelectedRow();
        if (rowNumber == -1) {
            JOptionPane.showMessageDialog(null, "Prosím vyberte riadok v tabuľke!");
            return;
        } else {
            BigInteger idPoruchy = new BigInteger(String.valueOf(jTable1.getValueAt(rowNumber, 0)));
            BigInteger osCisloOpravy = new BigInteger(String.valueOf(jTable1.getValueAt(rowNumber, 1)));
            BigInteger cisloND = new BigInteger(String.valueOf(jTable1.getValueAt(rowNumber, 2)));

            String poziadavka = jTextAreaPoziadavka.getText();
            String cisloDielu = (String) jComboBoxCisloDielu.getSelectedItem();

            // overenie vypisania udajov
            if (cisloDielu.equals(" ")) {
                JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
            } else {
                BigInteger cisloDieluBigInteger = new BigInteger(cisloDielu);
                try {
                    transaction.begin();

                    // Načítanie záznamu z databázy na základe ID a úprava
                    BUdrzbaPoruchyNahradnyDielPK primaryKey = new BUdrzbaPoruchyNahradnyDielPK(idPoruchy, osCisloOpravy, cisloND);
                    BUdrzbaPoruchyNahradnyDiel bUdrzbaPoruchyNahradnyDiel = entityManager.find(BUdrzbaPoruchyNahradnyDiel.class, primaryKey);

                    bUdrzbaPoruchyNahradnyDiel.setCisloNd(cisloDieluBigInteger);
                    bUdrzbaPoruchyNahradnyDiel.setPozadavkaNd(poziadavka);

                    entityManager.persist(bUdrzbaPoruchyNahradnyDiel);
                    transaction.commit();
                    JOptionPane.showMessageDialog(null, "Zmena bola vykonaná!");

                    this.refreshTable();

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Nastala chyba pri aktualizácii záznamu: " + e.getMessage() + " Skúste to znovu!");
                } finally {
                    if (transaction.isActive()) {
                        transaction.rollback();
                    }
                }
            }
        }
        JOptionPane.getRootFrame().setAlwaysOnTop(false);
    }

    private void jButtonNovyDielActionPerformed(java.awt.event.ActionEvent evt) {

        JOptionPane.getRootFrame().setAlwaysOnTop(true);
        try {
            transaction.begin();
            BNahradnyDiel bNahradnyDiel = new BNahradnyDiel();
            bNahradnyDiel.setTypStroja(this.typStrojaA);
            bNahradnyDiel.setDostupnostNdD("NO");
            bNahradnyDiel.setDostupneMnozstvo(BigInteger.valueOf(0));

            entityManager.persist(bNahradnyDiel);
            JOptionPane.showMessageDialog(null, "Bol vytvorený a priradený nový náhradný diel s číslom: " + bNahradnyDiel.getCisloNd() + " !");
            //DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            //comboBoxModel.addElement(bNahradnyDiel.getCisloNd().toString());
            jComboBoxCisloDielu.addItem(bNahradnyDiel.getCisloNd().toString());
            // Nastavte model do JComboBox
            //jComboBoxCisloDielu.setModel(comboBoxModel);
            jComboBoxCisloDielu.setSelectedItem(bNahradnyDiel.getCisloNd().toString());
            transaction.commit();
        } catch (Exception e) {
            e.getCause();
            JOptionPane.showMessageDialog(null, "Nastala chyba pri vytváraní záznamu: " + e.getMessage() + " skúste to znovu!");
        } finally {
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
        JOptionPane.getRootFrame().setAlwaysOnTop(false);
    }

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {

        JOptionPane.getRootFrame().setAlwaysOnTop(true);

        int pocetMoznosti = jComboBoxCisloDielu.getItemCount();
        //System.out.println("pocet:" + pocetMoznosti);

        if (pocetMoznosti == 1) {
            JOptionPane.showMessageDialog(null, "Prosím vytvorte nový náhradný diel!");
            return;
        }

        // nacitam si vypisane udaje
        String poziadavka = jTextAreaPoziadavka.getText();
        String cisloDielu = (String) jComboBoxCisloDielu.getSelectedItem();

        // overenie vypisania udajov
        if (cisloDielu.equals(" ")) {
            JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
        } else {
            BigInteger cisloDieluBigInteger = new BigInteger(cisloDielu);
            try {
                transaction.begin();

                // vytvorenie novej entity
                BUdrzbaPoruchyNahradnyDiel bUdrzbaPoruchyNahradnyDiel = new BUdrzbaPoruchyNahradnyDiel();

                bUdrzbaPoruchyNahradnyDiel.setIdPoruchy(this.id);
                bUdrzbaPoruchyNahradnyDiel.setOsCisloOpravy(this.oCislo);
                bUdrzbaPoruchyNahradnyDiel.setCisloNd(cisloDieluBigInteger);
                bUdrzbaPoruchyNahradnyDiel.setPozadavkaNd(poziadavka);

                entityManager.persist(bUdrzbaPoruchyNahradnyDiel);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Nová požiadavka bola vytvorená!");

                this.refreshTable();

            } catch (Exception e) {
                e.getCause();
                JOptionPane.showMessageDialog(null, "Nastala chyba pri vkladaní záznamu: " + e.getMessage() + " skúste to znovu!");
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
        }
        JOptionPane.getRootFrame().setAlwaysOnTop(false);
    }

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtonNovyDiel;
    private javax.swing.JComboBox<String> jComboBoxCisloDielu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextAreaPoziadavka;
    // End of variables declaration
}
