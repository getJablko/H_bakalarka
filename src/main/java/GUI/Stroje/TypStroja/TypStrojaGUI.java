/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Stroje.TypStroja;

import GUI.Stroje.StrojeGUI;
import Tabulky.BTypStroja;

import javax.persistence.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

/**
 * @author Mario
 */
public class TypStrojaGUI extends javax.swing.JFrame {

    private EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("default");
    private EntityManager entityManager = entityManagerFactory.createEntityManager();
    private EntityTransaction transaction = entityManager.getTransaction();
    private StrojeGUI strojeGUI;

    /**
     * Creates new form TypStrojaGUI
     */
    public TypStrojaGUI(StrojeGUI strojeGUI) {

        this.strojeGUI = strojeGUI;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // vynulovanie policok
                vynulovaniePolicok();
                if (strojeGUI != null) {
                    strojeGUI.onBTypStrojaGUIClosed();
                }
                dispose();
            }
        });
        this.displayDataInTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextFieldTypStroja = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(627, 400));
        setMinimumSize(new java.awt.Dimension(625, 400));
        setPreferredSize(new java.awt.Dimension(627, 400));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("TYP STROJA");

        jComboBox1.setBackground(new java.awt.Color(255, 255, 254));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{" ", "1", "2", "3", "4"}));

        jTextFieldTypStroja.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));


        jLabel2.setText("typ stroja*:");

        jLabel3.setText("priorita*:");

        jButtonInsert.setBackground(new java.awt.Color(255, 255, 254));
        jButtonInsert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonInsert.setText("INSERT");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(255, 255, 254));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(255, 255, 254));
        jButtonExit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonExit.setText("EXIT");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        jLabel4.setText("*menšie číslo = väčšia priorita stroja");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(104, 104, 104))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel2))
                                                .addGap(26, 26, 26)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jTextFieldTypStroja, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jButtonInsert)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(12, 12, 12)
                                                                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1)
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldTypStroja, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 314, 398);

        jTable1.setBackground(new java.awt.Color(255, 255, 254));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                },
                new String[]{
                        "typ_stroja", "priorita"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClick_ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(320, 0, 290, 398);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void displayDataInTable() {
        try {
            transaction.begin();
            JOptionPane.getRootFrame().setAlwaysOnTop(true);

            // ziskanie dat
            //pouzitie JPQL - rozumie tomu framework hibernate
            TypedQuery<Object[]> query = entityManager.createQuery(
                    "SELECT t.typStroja, t.prioritaD FROM BTypStroja t", Object[].class);
            List<Object[]> results = query.getResultList();
            // nahra udaje priamo do tabulky jTable1
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (Object[] result : results) {
                Object[] row = {
                        result[0],  // typ stroja
                        result[1],  // priorita
                };
                model.addRow(row);
            }
            // Commit
            transaction.commit();
        } catch (Exception e) {
            e.getCause();
            JOptionPane.showMessageDialog(null, "Nastala chyba pri nacitavani udajov: " + e.getMessage() + " skúste to znovu!");
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
        JOptionPane.getRootFrame().setAlwaysOnTop(false);
    }

    private void vynulovaniePolicok() {
        jTextFieldTypStroja.setText("");
        jComboBox1.setSelectedItem(" ");
    }

    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // nacitam ju znova
        this.displayDataInTable();

        // vynulovanie textovych policok
        this.vynulovaniePolicok();
    }

    private void closeApplication() {
        // cleanup code:
        entityManager.close();
        entityManagerFactory.close();
    }

    private void jTableMouseClick_ActionPerformed(MouseEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        int rowNumber = jTable1.getSelectedRow();

        String typStroja = (String) jTable1.getValueAt(rowNumber, 0);
        jTextFieldTypStroja.setText(typStroja);

        String priorita = (String) jTable1.getValueAt(rowNumber, 1);
        jComboBox1.setSelectedItem(priorita);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {

        String typStroja = jTextFieldTypStroja.getText();
        String priorita = (String) jComboBox1.getSelectedItem();

        JOptionPane.getRootFrame().setAlwaysOnTop(true);

        if (typStroja.equals("") || priorita.equals(" ")) {
            JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
        } else {
            try {
                transaction.begin();

                // vytvorenie noveho stroja s vypisanymi udajmi
                BTypStroja bTypStroja = new BTypStroja();
                bTypStroja.setTypStroja(typStroja);
                bTypStroja.setPrioritaD(priorita);

                entityManager.persist(bTypStroja);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Nový typ stroja bol vložený!");

                this.refreshTable();

            } catch (Exception e) {
                e.getCause();
                JOptionPane.showMessageDialog(null, "Nastala chyba pri vkladani záznamu: " + e.getMessage() + " skúste to znovu!");
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
            JOptionPane.getRootFrame().setAlwaysOnTop(false);
        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed

        String typStroja = jTextFieldTypStroja.getText();
        String priorita = (String) jComboBox1.getSelectedItem();
        // zobrazim okno ako alwaysOnTop pretože samotne GUI je nastavene rovnako!
        JOptionPane.getRootFrame().setAlwaysOnTop(true);

        if (typStroja.equals("") || priorita.equals(" ")) {
            JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
        } else {

            // overenie cislaDielu
            int rowCount = jTable1.getRowCount();
            List<String> typyStrojov = new ArrayList<>();
            for (int i = 0; i< rowCount; i++) {
                typyStrojov.add((String) jTable1.getValueAt(i,0));
            }
            boolean zhoda = false;
            for (int i = 0; i< rowCount; i++) {
                if (typyStrojov.contains(typStroja)){
                    zhoda = true;
                    break;
                }
            }
            System.out.println(typyStrojov);
            if (zhoda == false) {
                JOptionPane.showMessageDialog(null, "Nenašie sa  daný typ stroja, prosím vyberte záznam z tabuľky!");
                this.vynulovaniePolicok();
                return;
            }


            try {
                transaction.begin();

                // ziskanie ID
                int rowNumber = jTable1.getSelectedRow();
                String idStroja = (String) jTable1.getValueAt(rowNumber, 0);

                // najdenie stroja na zaklade PK (ID)
                BTypStroja bTypStroja = entityManager.find(BTypStroja.class, idStroja);

                // vykonanie zmien
                bTypStroja.setTypStroja(typStroja);
                bTypStroja.setPrioritaD(priorita);

                entityManager.persist(bTypStroja);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Zmena bola vykonaná!");
                this.refreshTable();


            } catch (Exception e) {
                e.getCause();
                //System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Nastala chyba pri upravovaní záznamu: " + e.getMessage() + " skúste to znovu!");
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
            JOptionPane.getRootFrame().setAlwaysOnTop(false);

        }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        // vynulovanie policok
        this.vynulovaniePolicok();


        if (strojeGUI != null) {
            strojeGUI.onBTypStrojaGUIClosed();
        }

        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldTypStroja;
    // End of variables declaration//GEN-END:variables
}
