/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Stroje;

import GUI.GUIManager;
import Sifrovanie.DateFormat;
import Tabulky.BStroj;
import Tabulky.BTypStroja;

import javax.persistence.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigInteger;
import java.util.List;

/**
 * @author Mario
 */
public class StrojeGUI extends javax.swing.JFrame implements BTypStrojaGUIClosedCallback {

    private EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("default");
    private EntityManager entityManager = entityManagerFactory.createEntityManager();
    private EntityTransaction transaction = entityManager.getTransaction();
    private GUIManager guiManager;
    private DateFormat dateFormat;

    /**
     * Creates new form Stroje
     */
    public StrojeGUI(GUIManager guiManager) {
        initComponents();
        this.guiManager = guiManager;
        this.dateFormat = new DateFormat();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // vynulovanie policok
                vynulovaniePolicok();

                guiManager.zviditelniHlavneMenu();
            }
        });
        this.displayDataInTable();
        this.naplnComboBoxTypyStrojov();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        homeButton = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonInsert = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonNovyStroj = new javax.swing.JButton();
        jComboBoxTypStroja = new javax.swing.JComboBox<>(); // Zmena tu
        jTextFieldZaradenie = new javax.swing.JTextField();
        jComboBoxCisloHaly = new javax.swing.JComboBox<>();
        jTextFieldVyradenie = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaPopis = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1040, 700));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        //homeButton.setBackground(new java.awt.Color(255, 255, 254));
        //homeButton.setText("H");

        // Load the image from file
        ImageIcon icon = new ImageIcon("C:\\Users\\Mario\\Desktop\\bakalarka\\hibernate_bakalarka\\H_bakalarka\\icons\\home_button2.png");

        // Resize the image
        Image image = icon.getImage(); // transform it
        Image newImg = image.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
        icon = new ImageIcon(newImg);  // transform it back
        // zmena farieb
        Color backgroundColor = new Color(255, 204, 153);
        homeButton.setBorder(null);
        homeButton.setBackground(backgroundColor);

        // Set the icon
        homeButton.setIcon(icon);
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("STROJE");

        jButtonInsert.setBackground(new java.awt.Color(255, 255, 254));
        jButtonInsert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonInsert.setText("INSERT");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(255, 255, 254));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonNovyStroj.setBackground(new java.awt.Color(255, 255, 254));
        jButtonNovyStroj.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonNovyStroj.setText("Nový stroj");
        jButtonNovyStroj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovyStrojActionPerformed(evt);
            }
        });

        // Zmena tu - vytvorenie JComboBox pre typ stroja
        jComboBoxTypStroja.setBackground(new java.awt.Color(255, 255, 254));
        //jComboBoxTypStroja.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Typ 1", "Typ 2", "Typ 3", "Typ 4" }));
        // Koniec zmeny

        jTextFieldZaradenie.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));

        jComboBoxCisloHaly.setBackground(new java.awt.Color(255, 255, 254));
        jComboBoxCisloHaly.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{" ", "HS6400", "HS6100", "HS5900", "HS5700", "HS5400", "HS5200"}));

        jTextFieldVyradenie.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaPopis.setBackground(new java.awt.Color(255, 255, 254));
        jTextAreaPopis.setColumns(20);
        jTextAreaPopis.setRows(5);
        jTextAreaPopis.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jScrollPane2.setViewportView(jTextAreaPopis);

        jLabel2.setText("typ stroja*:");

        jLabel3.setText("číslo haly*:");

        jLabel4.setText("zaradenie*:");

        jLabel5.setText("vyradenie:");

        jLabel6.setText("popis:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboBoxCisloHaly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxTypStroja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE) // Zmena tu
                                        .addComponent(jTextFieldZaradenie, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldVyradenie, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(11, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonNovyStroj)
                                                .addGap(15, 15, 15))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(145, 145, 145))))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(homeButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(homeButton)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jComboBoxTypStroja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) // Zmena tu
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBoxCisloHaly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldZaradenie, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jTextFieldVyradenie, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(50, 50, 50)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButtonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButtonNovyStroj, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel6))
                                .addContainerGap())
        );

        jTable1.setBackground(new java.awt.Color(255, 255, 254));
        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "ID_stroja", "typ_stroja", "priorita", "cislo_haly", "zaradenie", "vyradenie", "popis"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClick_ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }

    // metoda na zobraznie udajov v tabulke jTable1 z databazovej tabulky BZamestnanec
    private void displayDataInTable() {
        try {
            transaction.begin();

            // ziskanie dat
            //pouzitie JPQL - rozumie tomu framework hibernate
            TypedQuery<Object[]> query = entityManager.createQuery(
                    "SELECT s.idStroja, s.typStroja, s.cisloHaly, s.zaradenie, s.vyradenie, s.popis, t.prioritaD " +
                            "FROM BStroj s " +
                            "JOIN BTypStroja t ON s.typStroja = t.typStroja", Object[].class);

            List<Object[]> results = query.getResultList();

            // nahra udaje priamo do tabulky jTable1
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (Object[] result : results) {
                Object[] row = {
                        result[0],  // idStroja
                        result[1],  // typStroja
                        result[6],  // priorita_d
                        result[2],  // cisloHaly
                        result[3],  // zaradenie
                        result[4],  // vyradenie
                        result[5],  // popis
                };
                model.addRow(row);
            }
            transaction.commit();

        } catch (Exception e) {
            e.getCause();
            JOptionPane.showMessageDialog(null, "Nastala chyba pri nacitavani udajov: " + e.getMessage() + " skúste to znovu!");
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
    }

    private void naplnComboBoxTypyStrojov() {
        try {
            transaction.begin();

            //ziskanie dat
            TypedQuery<BTypStroja> query = entityManager.createQuery("SELECT t FROM BTypStroja t", BTypStroja.class);
            List<BTypStroja> typyStrojov = query.getResultList();

            // Vytvorte model pre JComboBox
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            comboBoxModel.addElement(" ");
            for (BTypStroja typStroja : typyStrojov) {
                comboBoxModel.addElement(typStroja.getTypStroja());
            }
            //comboBoxModel.addElement(" ");

            // Nastavte model do JComboBox
            jComboBoxTypStroja.setModel(comboBoxModel);

            // Commit
            transaction.commit();
        } catch (Exception e) {
            e.getCause();
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Nastala chyba pri načítavaní typov strojov: " + e.getMessage() + " skúste to znovu!");
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
    }

    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // nacitam ju znova
        displayDataInTable();

        // vynulovanie textovych policok
        this.vynulovaniePolicok();
    }

    @Override
    public void onBTypStrojaGUIClosed() {
        // Refresh table
        this.refreshTable();
    }

    private void closeApplication() {
        // cleanup code:
        entityManager.close();
        entityManagerFactory.close();
    }

    private void vynulovaniePolicok() {
        // vynulovanie textovych policok
        jComboBoxTypStroja.setSelectedItem(" ");
        jComboBoxCisloHaly.setSelectedItem(" ");
        jTextFieldZaradenie.setText("");
        jTextFieldVyradenie.setText("");
        jTextAreaPopis.setText("");
    }

    private void jTableMouseClick_ActionPerformed(MouseEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        int rowNumber = jTable1.getSelectedRow();

        String typStroja = (String) jTable1.getValueAt(rowNumber, 1);
        jComboBoxTypStroja.setSelectedItem(typStroja);

        String cisloHaly = (String) jTable1.getValueAt(rowNumber, 3);
        jComboBoxCisloHaly.setSelectedItem(cisloHaly);

        String zaradenie = (String) jTable1.getValueAt(rowNumber, 4);
        jTextFieldZaradenie.setText(zaradenie);

        if (jTable1.getValueAt(rowNumber, 5) != null) {
            String vyradenie = (String) jTable1.getValueAt(rowNumber, 5);
            jTextFieldVyradenie.setText(vyradenie);
        } else {
            jTextFieldVyradenie.setText("");
        }

        if (jTable1.getValueAt(rowNumber, 6) != null) {
            String popis = (String) jTable1.getValueAt(rowNumber, 6);
            jTextAreaPopis.setText(popis);
        } else {
            jTextAreaPopis.setText("");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // vynulovanie policok
        this.vynulovaniePolicok();

        guiManager.zviditelniHlavneMenu();
    }//GEN-LAST:event_homeButtonActionPerformed

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed

        String typStroja = (String) jComboBoxTypStroja.getSelectedItem();
        String cisloHaly = (String) jComboBoxCisloHaly.getSelectedItem();
        String zaradenie = jTextFieldZaradenie.getText();
        String vyradenie = jTextFieldVyradenie.getText();
        String popis = jTextAreaPopis.getText();

        JOptionPane.getRootFrame().setAlwaysOnTop(true);

        if (typStroja.equals(" ") || cisloHaly.equals(" ") || zaradenie.equals("")) {
            JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
        } else {
            try {
                transaction.begin();

                if (!dateFormat.overenie(zaradenie)) {
                    this.vynulovaniePolicok();
                    return;
                }
                if (!vyradenie.isEmpty()) {
                    if (!dateFormat.overenie(vyradenie)) {
                        this.vynulovaniePolicok();
                        return;
                    }
                }
                // vytvorenie noveho stroja s vypisanymi udajmi
                BStroj bStroj = new BStroj();
                bStroj.setTypStroja(typStroja);
                bStroj.setCisloHaly(cisloHaly);
                bStroj.setZaradenie(zaradenie);

                if (vyradenie != null) {
                    bStroj.setVyradenie(vyradenie);
                } else {
                    bStroj.setVyradenie(null);
                }

                if (popis != null) {
                    bStroj.setPopis(popis);
                } else {
                    bStroj.setPopis(null);
                }

                entityManager.persist(bStroj);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Nový stroj bol vložený!");

                this.refreshTable();

            } catch (Exception e) {
                e.getCause();
                JOptionPane.showMessageDialog(null, "Nastala chyba pri vkladani záznamu: " + e.getMessage() + " skúste to znovu!");
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
            JOptionPane.getRootFrame().setAlwaysOnTop(false);
        }
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed

        String typStroja = (String) jComboBoxTypStroja.getSelectedItem();
        String cisloHaly = (String) jComboBoxCisloHaly.getSelectedItem();
        String zaradenie = jTextFieldZaradenie.getText();
        String vyradenie = jTextFieldVyradenie.getText();
        String popis = jTextAreaPopis.getText();

        JOptionPane.getRootFrame().setAlwaysOnTop(true);

        if (typStroja.equals(" ") || cisloHaly.equals(" ") || zaradenie.equals("")) {
            JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
        } else {
            try {
                transaction.begin();

                if (!dateFormat.overenie(zaradenie)) {
                    this.vynulovaniePolicok();
                    return;
                }
                if (!vyradenie.isEmpty()) {
                    if (!dateFormat.overenie(vyradenie)) {
                        this.vynulovaniePolicok();
                        return;
                    }
                }
                // ziskanie ID
                int rowNumber = jTable1.getSelectedRow();
                BigInteger idStroja = (BigInteger) jTable1.getValueAt(rowNumber, 0);

                // najdenie stroja na zaklade PK (ID)
                BStroj bStroj = entityManager.find(BStroj.class, idStroja);

                // uprava stroja s vypisanymi udajmi

                bStroj.setTypStroja(typStroja);
                bStroj.setCisloHaly(cisloHaly);
                bStroj.setZaradenie(zaradenie);

                if (vyradenie != null) {
                    bStroj.setVyradenie(vyradenie);
                } else {
                    bStroj.setVyradenie(null);
                }

                if (popis != null) {
                    bStroj.setPopis(popis);
                } else {
                    bStroj.setPopis(null);
                }

                entityManager.persist(bStroj);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Zmena bola vykonaná!");

                this.refreshTable();

            } catch (Exception e) {
                e.getCause();
                JOptionPane.showMessageDialog(null, "Nastala chyba pri vkladani záznamu: " + e.getMessage() + " skúste to znovu!");
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
            JOptionPane.getRootFrame().setAlwaysOnTop(false);
        }

    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonNovyStrojActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovyStrojActionPerformed
        this.guiManager.zobrazTypStroja();
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton homeButton;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jButtonNovyStroj;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxCisloHaly;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextAreaPopis;
    private javax.swing.JComboBox<String> jComboBoxTypStroja;
    private javax.swing.JTextField jTextFieldVyradenie;
    private javax.swing.JTextField jTextFieldZaradenie;
    // End of variables declaration//GEN-END:variables
}
