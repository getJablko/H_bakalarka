/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Zamestnanci;


import GUI.GUIManager;
import GUI.Login.LoginGUI;
import Sifrovanie.PasswordUtils;
import Tabulky.BZamestnanec;

import javax.persistence.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigInteger;
import java.util.List;

/**
 * @author Mario
 */
public class TabulkaZamGUI extends javax.swing.JFrame {

    EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("default");
    EntityManager entityManager = entityManagerFactory.createEntityManager();
    EntityTransaction transaction = entityManager.getTransaction();

    private GUIManager guiManager;


    /**
     * Creates new form tabulkaZamGUI
     */
    public TabulkaZamGUI(GUIManager guiManager) {
        initComponents();
        this.guiManager = guiManager;

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // vynulovanie textovych policok
                vynulovaniePolicok();

                guiManager.zviditelniHlavneMenu();
            }
        });

        // na zaciatku zobrazi hodnoty z tabulky
        this.displayDataInTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1040, 700));

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                // reprezentuje uvodne riadky - momentalne po spusteni nie su ziadne prazdne riadky navyse
                new Object[][]{

                },
                new String[]{
                        "os_cislo", "meno", "priezvisko", "dostupnost_zam", "pracovisko_d", "typ_zam_d", "password"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClick_ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        jLabel2.setText("meno*:");

        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));


        jLabel3.setText("priezvisko*:");

        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));


        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("ZAMESTNANCI");

        jPasswordField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));


        jLabel7.setText("heslo*:");

        jLabel4.setText("dostupnost_zam*:");

        jComboBox1.setBackground(new java.awt.Color(254, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{" ", "0", "1"}));


        jLabel5.setText("pracovisko_d*:");

        jComboBox2.setBackground(new java.awt.Color(255, 255, 254));
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{" ", "HS6400", "HS6100", "HS5900", "HS5700", "HS5400", "HS5200"}));


        jLabel6.setText("typ_zam_d*:");

        jComboBox3.setBackground(new java.awt.Color(255, 255, 254));
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{" ", "E", "V", "M", "S", "I", "A"}));

        jButton1.setBackground(new java.awt.Color(255, 255, 254));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("INSERT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_INSERT_ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 254));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2_UPDATE_ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 254));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2_DELETE_ActionPerformed(evt);
            }
        });

        //jButton4.setBackground(new java.awt.Color(255, 255, 254));
        //jButton4.setText("H");

        // Load the image from file
        ImageIcon icon = new ImageIcon("C:\\Users\\Mario\\Desktop\\bakalarka\\hibernate_bakalarka\\H_bakalarka\\icons\\home_button2.png");

        // Resize the image
        Image image = icon.getImage(); // transform it
        Image newImg = image.getScaledInstance(25, 25, java.awt.Image.SCALE_SMOOTH); // scale it the smooth way
        icon = new ImageIcon(newImg);  // transform it back
        // Create a Color object with RGB values
        Color backgroundColor = new Color(255, 204, 153);
        // Remove borders from the button
        jButton4.setBorder(null);

        // Set the background color of the button
        jButton4.setBackground(backgroundColor);

        // Set the icon on the JButton
        jButton4.setIcon(icon);

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4_HOME_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(117, 117, 117))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(33, 33, 33)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel3)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jLabel7))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel5)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(73, 73, 73))))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jButton4)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton4)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1)
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2)
                                        .addComponent(jButton3))
                                .addContainerGap(354, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // metoda na zobraznie udajov v tabulke jTable1 z databazovej tabulky BZamestnanec
    private void displayDataInTable() {
        try {
            // Begin a transaction
            transaction.begin();

            // ziskanie dat
            // nejedna sa o typicky SQL statement (nepouzivam SELECT * FROM BZamestnanec), toto je pouzitie JPQL - rozumie tomu framework hibernate
            TypedQuery<BZamestnanec> query = entityManager.createQuery("SELECT b FROM BZamestnanec b", BZamestnanec.class);
            // List zamestnancov - preto lebo ma vela metod,dynamicku velkost,dobre sa pracuje s insert/delete
            List<BZamestnanec> employees = query.getResultList();

            // nahra udaje priamo do tabulky jTable1
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (BZamestnanec employee : employees) {
                Object[] row = {
                        employee.getOsCislo(),
                        employee.getMeno(),
                        employee.getPriezvisko(),
                        employee.getDostupnostZam(),
                        employee.getPracoviskoD(),
                        employee.getTypZamD(),
                        employee.getPassword()
                };
                model.addRow(row);
            }
            // Commit
            transaction.commit();
        } catch (Exception e) {
            e.getCause();
            JOptionPane.showMessageDialog(null, "Nastala chyba pri nacitavani udajov: " + e.getMessage() + " skúste to znovu!");
            if (transaction.isActive()) {
                transaction.rollback();
            }
        }
    }

    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        // nacitam ju znova
        this.displayDataInTable();

        // vynulovanie textovych policok
        this.vynulovaniePolicok();
    }

    private void vynulovaniePolicok() {
        // vynulovanie textovych policok
        jTextField1.setText("");
        jTextField2.setText("");
        jPasswordField1.setText("");
        jComboBox1.setSelectedItem(" ");
        jComboBox2.setSelectedItem(" ");
        jComboBox3.setSelectedItem(" ");
    }

    private void closeApplication() {
        // cleanup code:
        entityManager.close();
        entityManagerFactory.close();
    }

    private void jButton1_INSERT_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // nacitam si vypisane udaje
        String meno = jTextField1.getText();
        String priezvisko = jTextField2.getText();
        String heslo = new String(jPasswordField1.getPassword());
        String dostupnost = (String) jComboBox1.getSelectedItem();
        String pracovisko = (String) jComboBox2.getSelectedItem();
        String typZam = (String) jComboBox3.getSelectedItem();

        // overenie vypisania udajov
        if (meno.equals("") || priezvisko.equals("") || heslo.equals("") ||
                dostupnost.equals(" ") || pracovisko.equals(" ") || typZam.equals(" ")) {
            JOptionPane.showMessageDialog(null, "Prosím zadajte všetky povinné políčka!");
        } else {
            try {
                transaction.begin();

                // vytvorenie noveho zamestnanca s vypisanymi udajmi
                BZamestnanec novyZamestnanec = new BZamestnanec();
                novyZamestnanec.setPriezvisko(priezvisko);
                novyZamestnanec.setMeno(meno);
                novyZamestnanec.setDostupnostZam(BigInteger.valueOf(Long.parseLong(dostupnost)));
                novyZamestnanec.setPassword(PasswordUtils.hashPassword(heslo)); // Použite metódu na šifrovanie hesla
                novyZamestnanec.setPracoviskoD(pracovisko);
                novyZamestnanec.setTypZamD(typZam);

                entityManager.persist(novyZamestnanec);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Nový zamestnanec bol vlozeny!");

                this.refreshTable();

            } catch (Exception e) {
                e.getCause();
                JOptionPane.showMessageDialog(null, "Nastala chyba pri vkladani záznamu: " + e.getMessage() + " skúste to znovu!");
                this.vynulovaniePolicok();
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2_UPDATE_ActionPerformed(java.awt.event.ActionEvent evt) {
        int rowNumber = -1;
        rowNumber = jTable1.getSelectedRow();
        if (rowNumber == -1) {
            JOptionPane.showMessageDialog(null, "Prosím vyberte riadok v tabuľke!");
            this.vynulovaniePolicok();
            return;
        }

        // nacitam si vstupne udaje
        String meno = jTextField1.getText();
        String priezvisko = jTextField2.getText();
        String heslo = new String(jPasswordField1.getPassword());
        String dostupnost = (String) jComboBox1.getSelectedItem();
        String pracovisko = (String) jComboBox2.getSelectedItem();
        String typZam = (String) jComboBox3.getSelectedItem();

        // overenie vypisania udajov
        if (meno.equals("") || priezvisko.equals("") || heslo.equals("") ||
                dostupnost.equals(" ") || pracovisko.equals(" ") || typZam.equals(" ")) {
            JOptionPane.showMessageDialog(null, "Prosim vyberte zamestnanca z tabulky a vypiste potrebne zmeny!");
        } else {
            try {
                transaction.begin();

                // pre vratenie ID
                BigInteger id = (BigInteger) jTable1.getValueAt(rowNumber, 0);

                // Načítanie záznamu z databázy na základe ID
                BZamestnanec updateZam = entityManager.find(BZamestnanec.class, id);
                // vykonanie zmien
                updateZam.setMeno(meno);
                updateZam.setPriezvisko(priezvisko);
                updateZam.setPassword(PasswordUtils.hashPassword(heslo));
                updateZam.setPracoviskoD(pracovisko);
                updateZam.setDostupnostZam(BigInteger.valueOf(Long.parseLong(dostupnost)));
                updateZam.setTypZamD(typZam);

                entityManager.persist(updateZam);
                transaction.commit();
                JOptionPane.showMessageDialog(null, "Zmena bola vykonana!");

                this.refreshTable();

            } catch (Exception e) {
                e.getCause();
                JOptionPane.showMessageDialog(null, "Nastala chyba pri aktualizácii záznamu: " + e.getMessage() + " skúste to znovu!");
                this.vynulovaniePolicok();
            } finally {
                if (transaction.isActive()) {
                    transaction.rollback();
                }
            }
        }
        jTable1.clearSelection();
    }

    public void jButton2_DELETE_ActionPerformed(java.awt.event.ActionEvent evt) {
        // nie je potreba
    }

    private void jButton4_HOME_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.vynulovaniePolicok();

        guiManager.zviditelniHlavneMenu();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTableMouseClick_ActionPerformed(MouseEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        int rowNumber = jTable1.getSelectedRow();
        // pre vratenie hesla
        BigInteger id = (BigInteger) jTable1.getValueAt(rowNumber, 0);

        String meno = (String) jTable1.getValueAt(rowNumber, 1);
        jTextField1.setText(meno);

        String priezvisko = (String) jTable1.getValueAt(rowNumber, 2);
        jTextField2.setText(priezvisko);

        //vratenie hesla ??? je to nutne - NIE JE!!

        //String heslo = (String) PasswordUtils.vratHesloVseobecne(id.intValueExact());
        //jPasswordField1.setText(heslo);

        // hash-ovane heslo
        //String heslo = (String) jTable1.getValueAt(rowNumber,6);
        //jPasswordField1.setText(heslo);

        BigInteger dostupnost = (BigInteger) jTable1.getValueAt(rowNumber, 3);
        jComboBox1.setSelectedItem(dostupnost.toString());

        String pracovisko = (String) jTable1.getValueAt(rowNumber, 4);
        jComboBox2.setSelectedItem(pracovisko);

        String typZam = (String) jTable1.getValueAt(rowNumber, 5);
        jComboBox3.setSelectedItem(typZam);

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
